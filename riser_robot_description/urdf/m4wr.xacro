<?xml version="1.0"?>
<robot name="m4wr" xmlns:xacro="http://www.ros.org/wiki/xacro">
	
	<!-- INCLUDES -->
	<xacro:include filename="$(find gazebo_robots)/robots/common/materials.xacro"/>
	
	<!-- CONSTANTS -->
	<xacro:property name="chassis_length" value="1.0" />
	<xacro:property name="chassis_height" value="${chassis_length/4}"/>
	<xacro:property name="chassis_width" value="${chassis_length*3/4}"/>
	<xacro:property name="wheel_radius" value="${chassis_length/5}"/>
	<xacro:property name="wheel_thickness" value="${chassis_length/20}"/>
	<xacro:property name="sensor_plate_width" value="0.2"/>
	<xacro:property name="chassis_mass" value="20.0"/>
	<xacro:property name="wheel_mass" value="${chassis_mass/10}"/>
	<xacro:property name="i_value" value="1.0"/>
	<xacro:property name="i_value_w" value="0.2"/>
	<xacro:property name="wheel_damping" value="0.0"/>
	<xacro:property name="wheel_friction" value="10000.0"/>
	<xacro:property name="friction_const" value="500.0"/>
	<xacro:property name="pi" value="3.1415" />
	<xacro:property name="sensor_pole_margin" value="0.05"/>
	<xacro:property name="sensor_pole_length" value="${chassis_length/4}"/>
	<xacro:property name="sensor_pole_radius" value="${chassis_length/30}"/>
 
  <gazebo reference="link_chassis">
    <material>Gazebo/Orange</material>
  </gazebo>
  <gazebo reference="sensor_plate">
    <material>Gazebo/Black</material>
  </gazebo>
  
  <gazebo reference="front_left_sensor_pole">
    <material>Gazebo/Orange</material>
  </gazebo>
  <gazebo reference="front_right_sensor_pole">
    <material>Gazebo/Orange</material>
  </gazebo>
  <gazebo reference="rear_left_sensor_pole">
    <material>Gazebo/Orange</material>
  </gazebo>
  <gazebo reference="rear_right_sensor_pole">
    <material>Gazebo/Orange</material>
  </gazebo>
  
  <gazebo reference="left_front_wheel">
  	<mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <slip1></slip1>
  	<material>Gazebo/Black</material>
  </gazebo>
  
  <gazebo reference="left_rear_wheel">
  	<mu1>0.2</mu1>
    <mu2>0.2</mu2>
  	<material>Gazebo/Black</material>
  </gazebo>
  
  <gazebo reference="right_front_wheel">
  	<mu1>0.2</mu1>
    <mu2>0.2</mu2>
  	<material>Gazebo/Black</material>
  </gazebo>
  
  <gazebo reference="right_rear_wheel">
  	<mu1>0.2</mu1>
    <mu2>0.2</mu2>
  	<material>Gazebo/Black</material>
  </gazebo>
  
  <gazebo reference="camera_box">
  	<material>Gazebo/Black</material>
  </gazebo>
  
  <gazebo reference="lidar_box">
  	<material>Gazebo/Gray</material>
  </gazebo>
	
	<!-- LINKS -->
	 <link name="link_chassis">
	 		<pose>0 0 0 0 0 0</pose>
		  <inertial>
		    <mass value="20"/>
		    <origin rpy="0 0 0" xyz="0 0 0"/>
		    <inertia ixx="${i_value}" ixy="0" ixz="0" iyy="${i_value}" iyz="0" izz="${i_value}"/>
		  </inertial>
		  <collision>
		  	<origin rpy="0 0 0" xyz="0 0 0"/>
		    <geometry>
		      <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
		    </geometry>
		  </collision>
		  <visual>
		    <origin rpy="0 0 0" xyz="0 0 0"/>
		    <geometry>
		      <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
		    </geometry>
		  </visual>
   
    </link>
	<!-- ################################ SENSORS ################################ -->
	<link name="front_left_sensor_pole">
		<visual>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
			<geometry>
				<cylinder length="${sensor_pole_length}" radius="${sensor_pole_radius}"/>
			</geometry>
		</visual>
		<collision>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
			<geometry>
				<cylinder length="${sensor_pole_length}" radius="${sensor_pole_radius}"/>
			</geometry>
		</collision>
		<inertial>
		    <mass value="1"/>
		    <origin rpy="0 0 0" xyz="0 0 0"/>
		    <inertia ixx="${i_value}" ixy="0" ixz="0" iyy="${i_value}" iyz="0" izz="${i_value}"/>
		 </inertial>
	</link>
	<link name="front_right_sensor_pole">
		<visual>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
			<geometry>
				<cylinder length="${sensor_pole_length}" radius="${sensor_pole_radius}"/>
			</geometry>
		</visual>
		<collision>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
			<geometry>
				<cylinder length="${sensor_pole_length}" radius="${sensor_pole_radius}"/>
			</geometry>
		</collision>
		<inertial>
		    <mass value="1"/>
		    <origin rpy="0 0 0" xyz="0 0 0"/>
		    <inertia ixx="${i_value}" ixy="0" ixz="0" iyy="${i_value}" iyz="0" izz="${i_value}"/>
		 </inertial>
	</link>
	
	<link name="rear_right_sensor_pole">
		<visual>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
			<geometry>
				<cylinder length="${sensor_pole_length}" radius="${sensor_pole_radius}"/>
			</geometry>
		</visual>
		<collision>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
			<geometry>
				<cylinder length="${sensor_pole_length}" radius="${sensor_pole_radius}"/>
			</geometry>
		</collision>
		<inertial>
		    <mass value="1"/>
		    <origin rpy="0 0 0" xyz="0 0 0"/>
		    <inertia ixx="${i_value}" ixy="0" ixz="0" iyy="${i_value}" iyz="0" izz="${i_value}"/>
		 </inertial>
	</link>
	
	<link name="rear_left_sensor_pole">
		<visual>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
			<geometry>
				<cylinder length="${sensor_pole_length}" radius="${sensor_pole_radius}"/>
			</geometry>
		</visual>
		<collision>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
			<geometry>
				<cylinder length="${sensor_pole_length}" radius="${sensor_pole_radius}"/>
			</geometry>
		</collision>
		<inertial>
		    <mass value="1"/>
		    <origin rpy="0 0 0" xyz="0 0 0"/>
		    <inertia ixx="${i_value}" ixy="0" ixz="0" iyy="${i_value}" iyz="0" izz="${i_value}"/>
		 </inertial>
	</link>
	
	<link name="sensor_plate">
		<visual>
			<origin rpy="0 0 0" xyz="0 0 0"/>
			<geometry>
				<box size="${chassis_length} ${chassis_width} 0.05"/>
			</geometry>
		</visual>
		<collision>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
			<geometry>
				<box size="${chassis_length} ${chassis_width} 0.05"/>
			</geometry>
		</collision>
		<inertial>
		    <mass value="2"/>
		    <origin rpy="0 0 0" xyz="0 0 0"/>
		    <inertia ixx="${i_value}" ixy="0" ixz="0" iyy="${i_value}" iyz="0" izz="${i_value}"/>
		 </inertial>
	</link>
	
	<link name="camera_box">
		<visual>
			<origin rpy="0 0 0" xyz="0 0 0"/>
			<geometry>
				<box size="0.05 0.15 0.05"/>
			</geometry>
		</visual>
		<collision>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
			<geometry>
				<box size="0.05 0.15 0.05"/>
			</geometry>
		</collision>
		<inertial>
		    <mass value="2"/>
		    <origin rpy="0 0 0" xyz="0 0 0"/>
		    <inertia ixx="${i_value}" ixy="0" ixz="0" iyy="${i_value}" iyz="0" izz="${i_value}"/>
		 </inertial>
	</link>
	
	<link name="lidar_box">
		<visual>
			<origin rpy="0 0 0" xyz="0 0 0"/>
			<geometry>
				<cylinder length="0.1" radius="0.075"/>
			</geometry>
		</visual>
		<collision>
			<origin rpy="0 0 0" xyz="0 0 0"/>
			<geometry>
				<cylinder length="0.1" radius="0.075"/>
			</geometry>
		</collision>
		<inertial>
		    <mass value="0.6"/>
		    <origin rpy="0 0 0" xyz="0 0 0"/>
		    <inertia ixx="${i_value}" ixy="0" ixz="0" iyy="${i_value}" iyz="0" izz="${i_value}"/>
		 </inertial>
	</link>
	
	

	<!-- ################################ WHEELS ################################ -->
	<link name="left_front_wheel">
		<inertial>
			<mass value="${wheel_mass}"/>
			<inertia ixx="${i_value_w}" ixy="0" ixz="0" iyy="${i_value_w}" iyz="0" izz="${i_value_w}"/>
      <origin rpy="0 1.5707 1.5707" xyz="0 0 0" />
		</inertial>
		<visual>
      <origin rpy="0 1.5707 1.5707" xyz="0 0 0" />
			<geometry>
				<cylinder length="${wheel_thickness}" radius="${wheel_radius}"/>
			</geometry>
		</visual>
		<collision>
      <origin rpy="0 1.5707 1.5707" xyz="0 0 0" />
			<geometry>
				<cylinder length="${wheel_thickness}" radius="${wheel_radius}"/>
			</geometry>
		</collision>
	</link>
	
	<link name="right_front_wheel">
		<inertial>
			<mass value="${wheel_mass}"/>
			<inertia ixx="${i_value_w}" ixy="0" ixz="0" iyy="${i_value_w}" iyz="0" izz="${i_value_w}"/>
			<origin rpy="0 1.5707 1.5707" xyz="0 0 0" />
		</inertial>
		<visual>
			<origin rpy="0 1.5707 1.5707" xyz="0 0 0" />
			<geometry>
				<cylinder length="${wheel_thickness}" radius="${wheel_radius}"/>
			</geometry>
		</visual>
		<collision>
			<origin rpy="0 1.5707 1.5707" xyz="0 0 0" />
			<geometry>
				<cylinder length="${wheel_thickness}" radius="${wheel_radius}"/>
			</geometry>
		</collision>
	</link>
	
	<link name="left_rear_wheel">
		<inertial>
			<origin rpy="0 1.5707 1.5707" xyz="0 0 0" />
			<mass value="${wheel_mass}"/>
			<inertia ixx="${i_value_w}" ixy="0" ixz="0" iyy="${i_value_w}" iyz="0" izz="${i_value_w}"/>
		</inertial>
		<visual>
			<origin rpy="0 1.5707 1.5707" xyz="0 0 0" />
			<geometry>
				<cylinder length="${wheel_thickness}" radius="${wheel_radius}"/>
			</geometry>
		</visual>
		<collision>
			<origin rpy="0 1.5707 1.5707" xyz="0 0 0" />
			<geometry>
				<cylinder length="${wheel_thickness}" radius="${wheel_radius}"/>
			</geometry>
		</collision>
	</link>

	<link name="right_rear_wheel">
		<inertial>
			<origin rpy="0 1.5707 1.5707" xyz="0 0 0" />
			<mass value="${wheel_mass}"/>
			<inertia ixx="${i_value_w}" ixy="0" ixz="0" iyy="${i_value_w}" iyz="0" izz="${i_value_w}"/>
		</inertial>
		<visual>
			<origin rpy="0 1.5707 1.5707" xyz="0 0 0" />
			<geometry>
				<cylinder length="${wheel_thickness}" radius="${wheel_radius}"/>
			</geometry>
		</visual>
		<collision>
			<origin rpy="0 1.5707 1.5707" xyz="0 0 0" />
			<geometry>
				<cylinder length="${wheel_thickness}" radius="${wheel_radius}"/>
			</geometry>
		</collision>
	</link>
	
	<!-- ################################ JOINTS ################################ -->
	<joint name="front_left_wheel_joint" type="continuous">
		<child link="left_front_wheel"/>
		<parent link="link_chassis"/>
		<origin xyz="${chassis_length/2 - wheel_radius} ${chassis_width/2 + wheel_thickness/2} ${chassis_height/2 - wheel_radius}" rpy="0 0 0"/>
		<axis rpy="0 0 0" xyz="0 1 0"/>
		<dynamics damping="${wheel_damping}" friction="${wheel_friction}" />
		<limit effort="10000" velocity="1000"/>
	</joint>
	
	<joint name="front_right_wheel_joint" type="continuous">
		<child link="right_front_wheel"/>
		<parent link="link_chassis"/>
		<origin xyz="${chassis_length/2 - wheel_radius} ${-(chassis_width/2 + wheel_thickness/2)} ${chassis_height/2 - wheel_radius}" rpy="0 0 0"/>
		<axis rpy="0 0 0" xyz="0 1 0"/>
		<dynamics damping="${wheel_damping}" friction="${wheel_friction}" />
		<limit effort="10000" velocity="1000"/>
	</joint>
	
	<joint name="rear_left_wheel_joint" type="continuous">
		<child link="left_rear_wheel"/>
		<parent link="link_chassis"/>
		<origin xyz="${-chassis_length/2 + wheel_radius} ${chassis_width/2 + wheel_thickness/2} ${chassis_height/2 - wheel_radius}" rpy="0 0 0"/>
		<axis rpy="0 0 0" xyz="0 1 0"/>
		<dynamics damping="${wheel_damping}" friction="${wheel_friction}" />
		<limit effort="10000" velocity="1000"/>
	</joint>
	
	<joint name="rear_right_wheel_joint" type="continuous">
		<child link="right_rear_wheel"/>
		<parent link="link_chassis"/>
		<origin xyz="${-chassis_length/2 + wheel_radius} ${-(chassis_width/2 + wheel_thickness/2)} ${chassis_height/2 - wheel_radius}" rpy="0 0 0"/>
		<axis rpy="0 0 0" xyz="0 1 0"/>
		<dynamics damping="${wheel_damping}" friction="${wheel_friction}" />
		<limit effort="10000" velocity="1000"/>
	</joint>
	
	<joint name="front_left_sensor_pole_joint" type="fixed">
		<child link="front_left_sensor_pole"/>
		<parent link="link_chassis"/>
		<origin xyz="${chassis_length/2 - sensor_pole_margin} ${chassis_width/2 - sensor_pole_margin} ${chassis_height}" rpy="0 1.57075 0"/>
	</joint>
	<joint name="front_right_sensor_pole_joint" type="fixed">
		<child link="front_right_sensor_pole"/>
		<parent link="link_chassis"/>
		<origin xyz="${chassis_length/2 - sensor_pole_margin} ${-(chassis_width/2 - sensor_pole_margin)} ${chassis_height}" rpy="0 1.57075 0"/>
	</joint>
	
	<joint name="rear_right_sensor_pole_joint" type="fixed">
		<child link="rear_right_sensor_pole"/>
		<parent link="link_chassis"/>
		<origin xyz="${-(chassis_length/2 - sensor_pole_margin)} ${-(chassis_width/2 - sensor_pole_margin)} ${chassis_height}" rpy="0 1.57075 0"/>
	</joint>
	
	<joint name="rear_left_sensor_pole_joint" type="fixed">
		<child link="rear_left_sensor_pole"/>
		<parent link="link_chassis"/>
		<origin xyz="${-(chassis_length/2 - sensor_pole_margin)} ${chassis_width/2 - sensor_pole_margin} ${chassis_height}" rpy="0 1.57075 0"/>
	</joint>
	
	<joint name="sensor_plate_joint" type="fixed">
		<child link="sensor_plate"/>
		<parent link="link_chassis"/>
		<origin xyz="0 0 ${chassis_height/2 + sensor_pole_length}" rpy="0 0 0"/>
	</joint>
	
	<joint name="camera_box_joint" type="fixed">
		<child link="camera_box"/>
		<parent link="link_chassis"/>
		<origin xyz="${chassis_length/2 - 0.025} 0 ${chassis_height/2 + 0.025}" rpy="0 0 0"/>
	</joint>
	
	<joint name="lidar_box_joint" type="fixed">
		<child link="lidar_box"/>
		<parent link="sensor_plate"/>
		<origin xyz="${chassis_length/2 - 0.075} 0 0.075" rpy="0 0 0"/>
	</joint>
	
	<!-- PLUGINS -->
	<gazebo>
		<plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
		  <updateRate>20.0</updateRate>
		  <robotNamespace>/m4wr</robotNamespace>
		  <leftFrontJoint>front_left_wheel_joint</leftFrontJoint>
		  <rightFrontJoint>front_right_wheel_joint</rightFrontJoint>
		  <leftRearJoint>rear_left_wheel_joint</leftRearJoint>
		  <rightRearJoint>rear_right_wheel_joint</rightRearJoint>
		  <wheelSeparation>0.4</wheelSeparation>
		  <wheelDiameter>0.2</wheelDiameter>
		  <robotBaseFrame>link_chassis</robotBaseFrame>
		  <torque>20</torque>
		  <topicName>cmd_vel</topicName>
		  <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
		  <broadcastTF>true</broadcastTF>
		  <alwaysOn>true</alwaysOn>
		</plugin>
	</gazebo>
	
	<gazebo reference="camera_box">
		<sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="front_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>/m4wr/sensor/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_box</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
	</gazebo>
	
	<gazebo reference="lidar_box">
			<sensor name="ouster" type="ray">
				<always_on>false</always_on>
				<update_rate>20.0</update_rate>
				<pose>0 0 0 0 0 0</pose>
				<ray>
					<scan>
						<horizontal>
							<samples>1024</samples>
							<resolution>1</resolution>
							<min_angle>${-pi}</min_angle>
							<max_angle>${pi}</max_angle>
						</horizontal>
						<vertical>
							<samples>16</samples>
							<resolution>1</resolution>
							<min_angle>${-30.67*pi/180}</min_angle>
							<max_angle>${10.67*pi/180}</max_angle>
						</vertical>
					</scan>
					<range>
						<min>0.8</min>
						<max>100.0</max>
						<resolution>0.02</resolution>
					</range>
				</ray>
				<!-- test plugin -->
				<plugin name="ouster_controller" filename="libgazebo_ros_block_laser.so">
					<gaussianNoise>0.005</gaussianNoise>
					<alwaysOn>true</alwaysOn>
					<updateRate>10</updateRate>
					<topicName>/m4wr/sensor/ouster/pointcloud</topicName>
					<frameName>os1</frameName>
					<hokuyoMinIntensity>101</hokuyoMinIntensity>
				</plugin>
			</sensor>
		</gazebo>
</robot>
